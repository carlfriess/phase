//
// Created by Carl Friess on 02/01/2021.
//

#include "gtest/gtest.h"
#include "util.h"

TEST(Imgcpy, OverlappingBottom) {

    uint8_t a[] = {
            0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08,
            0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18,
            0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28,
    };

    phase::ui::Frame a_frame = {
            .origin = {3, 3},
            .width = 3,
            .height = 3,
    };

    uint8_t b[] = {
            0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38,
            0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48,
            0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58,
    };

    phase::ui::Frame b_frame = {
            .origin = {5, 4},
            .width = 3,
            .height = 3,
    };

    phase::ui::imgcpy(a, a_frame, b, b_frame);

    uint8_t out[] = {
            0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08,
            0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x30, 0x31, 0x32,
            0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x40, 0x41, 0x42,
    };

    for (size_t i = 0; i < sizeof(out); i++) {
        EXPECT_EQ(a[i], out[i]);
    }

}

TEST(Imgcpy, OverlappingTop) {

    uint8_t a[] = {
            0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08,
            0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18,
            0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28,
    };

    phase::ui::Frame a_frame = {
            .origin = {3, 3},
            .width = 3,
            .height = 3,
    };

    uint8_t b[] = {
            0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38,
            0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48,
            0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58,
    };

    phase::ui::Frame b_frame = {
            .origin = {2, 2},
            .width = 3,
            .height = 3,
    };

    phase::ui::imgcpy(a, a_frame, b, b_frame);

    uint8_t out[] = {
            0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x06, 0x07, 0x08,
            0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x16, 0x17, 0x18,
            0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28,
    };

    for (size_t i = 0; i < sizeof(out); i++) {
        EXPECT_EQ(a[i], out[i]);
    }

}

TEST(Imgcpy, ContainingImg) {

    uint8_t a[] = {
            0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08,
            0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18,
            0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28,
    };

    phase::ui::Frame a_frame = {
            .origin = {3, 3},
            .width = 3,
            .height = 3,
    };

    uint8_t b[] = {
            0x30, 0x31, 0x32,
    };

    phase::ui::Frame b_frame = {
            .origin = {4, 4},
            .width = 1,
            .height = 1,
    };

    phase::ui::imgcpy(a, a_frame, b, b_frame);

    uint8_t out[] = {
            0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08,
            0x10, 0x11, 0x12, 0x30, 0x31, 0x32, 0x16, 0x17, 0x18,
            0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28,
    };

    for (size_t i = 0; i < sizeof(out); i++) {
        EXPECT_EQ(a[i], out[i]);
    }

}

TEST(Imgcpy, ContainingDst) {

    uint8_t a[] = {
            0x00, 0x01, 0x02,
    };

    phase::ui::Frame a_frame = {
            .origin = {4, 4},
            .width = 1,
            .height = 1,
    };

    uint8_t b[] = {
            0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38,
            0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48,
            0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58,
    };

    phase::ui::Frame b_frame = {
            .origin = {3, 3},
            .width = 3,
            .height = 3,
    };

    phase::ui::imgcpy(a, a_frame, b, b_frame);

    uint8_t out[] = {
            0x43, 0x44, 0x45,
    };

    for (size_t i = 0; i < sizeof(out); i++) {
        EXPECT_EQ(a[i], out[i]);
    }

}
